'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.296
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports B1WizardBase
Imports SAPbobsCOM
Imports SAPbouiCOM
Public Class DLVR_SCH__Button__1
    Inherits B1Item

    Public Sub New()
        MyBase.New()
        FormType = "DLVRSCHv2"
        ItemUID = "1"
    End Sub

    <B1Listener(BoEventTypes.et_ITEM_PRESSED, True)>
    Public Overridable Function OnBeforeItemPressed(ByVal pVal As ItemEvent) As Boolean
        Try
            Dim ActionSuccess As Boolean = pVal.ActionSuccess
            Dim form As SAPbouiCOM.Form = B1Connections.theAppl.Forms.Item(pVal.FormUID)
            Dim mtx As SAPbouiCOM.Matrix = form.Items.Item("mtx_ds").Specific
            Dim truck As String = form.Items.Item("Truck").Specific.value
            Dim truckqty As Double = CDbl(form.Items.Item("truckqty").Specific.value)
            Dim transporter As String = form.Items.Item("Transptr").Specific.value
            Dim delterm As String = form.Items.Item("DelTerm").Specific.value
            Dim CustCode As String = form.Items.Item("CustCode").Specific.value
            Dim PostDate As String = form.Items.Item("PostDate").Specific.value
            Dim itentry As String = form.Items.Item("itentry").Specific.value
            Dim SoDate As SAPbouiCOM.EditText = form.Items.Item("SoDate").Specific

            If form.Mode = BoFormMode.fm_ADD_MODE Then
                If DLVR_SCH__Sub.GetTotalChecked(form) = 0 Then
                    B1Connections.theAppl.MessageBox("Please check item from PI")
                    Return False
                End If

                For i = mtx.RowCount To 1 Step -1
                    If Not mtx.Columns.Item("check").Cells.Item(i).Specific.Checked Then
                        mtx.DeleteRow(i)
                    End If
                    SoDate.Value = PostDate
                Next i
            End If

            If form.Mode <> BoFormMode.fm_FIND_MODE Then
                If CustCode = "" Then
                    B1Connections.theAppl.MessageBox("Customer code cannot be empty")
                    Return False
                End If

                If delterm = "" Then
                    B1Connections.theAppl.MessageBox("Delivery Term cannot be empty")
                    Exit Function
                End If

                If transporter = "" Then
                    B1Connections.theAppl.MessageBox("Transporter cannot be empty")
                    Exit Function
                End If

                If truck = "" Then
                    B1Connections.theAppl.MessageBox("Truck cannot be empty")
                    Exit Function
                End If

                If truckqty <= 0 Then
                    B1Connections.theAppl.MessageBox("Truck capacity must be greater than 0")
                    Exit Function
                End If

                If PostDate = "" Then
                    B1Connections.theAppl.MessageBox("Post date cannot be empty")
                    Return False
                End If

                For i = mtx.RowCount To 1 Step -1
                    Dim balance As Double = CDbl(mtx.Columns.Item("Qty").Cells.Item(i).Specific.value)
                    If balance < 0 Then
                        B1Connections.theAppl.MessageBox("Balance quantity must be greater than 0")
                        Exit Function
                    End If

                    If itentry = "" Then
                        'cek stok warehouse
                        Dim itemcode As String = mtx.Columns.Item("ItemCod").Cells.Item(i).Specific.value
                        Dim warehouse As String = mtx.Columns.Item("Whs").Cells.Item(i).Specific.value
                        Dim binloc As String = mtx.Columns.Item("BinLoc").Cells.Item(i).Specific.value
                        Dim batch As String = mtx.Columns.Item("Batch").Cells.Item(i).Specific.value
                        Dim qty As Double = CDbl(mtx.Columns.Item("Qty").Cells.Item(i).Specific.value)

                        If warehouse = "" Or binloc = "" Or batch = "" Then
                            B1Connections.theAppl.MessageBox("Warehouse or Bin Location or Batch  cannot be empty")
                            Exit Function
                        End If

                        If qty <= 0 Then
                            B1Connections.theAppl.MessageBox("Quantity D/S must be greater than 0 " & itemcode)
                            Exit Function
                        End If

                        Dim val As String = Control._retRstField("call _IDU_DLS_GET_STOCKWHS('" & itemcode & "','" & binloc & "','" & warehouse & "','" & batch & "')")
                        Dim stockwarehouse As Double = 0

                        If Not val.Equals("") Then
                            stockwarehouse = CDbl(val)
                        End If

                        If qty > stockwarehouse Then
                            B1Connections.theAppl.MessageBox("Stock Quantity less than D/S Quantity " & itemcode)
                            Exit Function
                        End If
                    End If
                Next i

                'cek total qty truck
                'Dim truckqty As Double = CDbl(Control._retRstField("select ""U_IDU_DEFAULT_WEIGHT"" from ""@IDU_TRUCK"" where ""Code""='" & truck & "'"))
                If truckqty < DLVR_SCH__Sub.GetTotalQty(form) Then
                    B1Connections.theAppl.MessageBox("Total Quantity more than Truck Capacity")
                    Return False
                End If
            End If



            Return True
        Catch ex As Exception
            B1Connections.theAppl.MessageBox("Button1|OnBeforeItemPressed|" & ex.Message.ToString)
        End Try
    End Function

    '<B1Listener(BoEventTypes.et_ITEM_PRESSED, False)> _
    'Public Overridable Sub OnAfterItemPressed(ByVal pVal As ItemEvent)
    '    Dim form As Form = B1Connections.theAppl.Forms.Item(pVal.FormUID)
    '    'ADD YOUR ACTION CODE HERE ...
    '    Dim oDoc As SAPbobsCOM.Documents = Nothing

    '    Try
    '        If pVal.Action_Success Then
    '            Dim odbds As SAPbouiCOM.DBDataSource = CType(form.DataSources.DBDataSources.Item(0), SAPbouiCOM.DBDataSource)
    '            Dim docEntry As Integer = odbds.GetValue("DocEntry", odbds.Offset)

    '            oDoc = B1Connections.diCompany.GetBusinessObject(SAPbobsCOM.BoObjectTypes.oQuotations)
    '            Dim oRs As Recordset = Control._recordSet("select ""U_IDU_PIEntry"", ""U_IDU_BalanceQty"" from ""@DLS1"" where ""DocEntry"" = " & docEntry)

    '            Do Until oRs.EoF
    '                Dim _pientry As Integer = oRs.Fields.Item("U_IDU_PIEntry").Value
    '                Dim _balance As Integer = oRs.Fields.Item("U_IDU_BalanceQty").Value

    '                If _balance = 0 Then
    '                    oDoc.GetByKey(CInt(_pientry))
    '                    oDoc.Close()
    '                ElseIf _balance > 0 Then
    '                    Control._executeQuery("update OQUT set ""DocStatus""='O' where ""DocEntry""=" & _pientry)
    '                    Control._executeQuery("update QUT1 set ""LineStatus""='O' where ""DocEntry""=" & _pientry)
    '                End If

    '                oRs.MoveNext()
    '            Loop

    '            If form.Mode = BoFormMode.fm_ADD_MODE Then
    '                Control._formStatus(form)
    '            End If
    '        End If
    '    Catch ex As Exception
    '        B1Connections.theAppl.MessageBox("btnAdd|OnAfterItemPressed|" & ex.Message.ToString)
    '    End Try
    'End Sub
End Class