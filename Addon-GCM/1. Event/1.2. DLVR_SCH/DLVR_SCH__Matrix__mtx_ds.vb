'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.296
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports B1WizardBase
Imports SAPbobsCOM
Imports SAPbouiCOM

Public Class DLVR_SCH__Matrix__mtx_ds
    Inherits B1Item

    Public Sub New()
        MyBase.New()
        FormType = "DLVRSCHv2"
        ItemUID = "mtx_ds"
    End Sub

    <B1Listener(BoEventTypes.et_CHOOSE_FROM_LIST, False)> _
    Public Overridable Sub OnAfterChooseFromList(ByVal pVal As ItemEvent)
        Dim ActionSuccess As Boolean = pVal.ActionSuccess
        Dim form As Form = B1Connections.theAppl.Forms.Item(pVal.FormUID)
        Dim matrix As Matrix = CType(form.Items.Item("mtx_ds").Specific, Matrix)

        Dim oData As DataTable = Control._chooseFromList(form, pVal)
        Try
            If pVal.ColUID = "ItemCod" Then
                matrix.SetCellWithoutValidation(pVal.Row, "ItemCod", oData.GetValue(0, 0))
                matrix.SetCellWithoutValidation(pVal.Row, "ItemDes", oData.GetValue(1, 0))
            ElseIf pVal.ColUID = "Whs" Then
                matrix.SetCellWithoutValidation(pVal.Row, "Whs", oData.GetValue(0, 0))
            ElseIf pVal.ColUID = "PtNo" Then
                matrix.SetCellWithoutValidation(pVal.Row, "PtNo", oData.GetValue(0, 0))
                matrix.SetCellWithoutValidation(pVal.Row, "CusRef", oData.GetValue("NumAtCard", 0))
            End If

            If form.Mode = BoFormMode.fm_OK_MODE Then
                form.Mode = BoFormMode.fm_UPDATE_MODE
            End If
        Catch ex As Exception
            B1Connections.theAppl.SetStatusBarMessage(ex.Message, BoMessageTime.bmt_Short, True)
        End Try

    End Sub

    <B1Listener(BoEventTypes.et_ITEM_PRESSED, False)> _
    Public Overridable Sub OnAfterItemPressed(ByVal pVal As ItemEvent)
        Try
            Dim ActionSuccess As Boolean = pVal.ActionSuccess
            Dim form As SAPbouiCOM.Form = B1Connections.theAppl.Forms.Item(pVal.FormUID)
            Dim mtx As SAPbouiCOM.Matrix = form.Items.Item("mtx_ds").Specific

            If pVal.ColUID = "check" And pVal.Row <> 0 Then
                DLVR_SCH__Sub.RefreshTotalAmount(form)
                DLVR_SCH__Sub.RefreshGrandTotal(form)
                DLVR_SCH__Sub.RefreshRemark(form)
            ElseIf pVal.ColUID = "Lcl" And pVal.Row <> 0 Then
                Dim lcl As String = mtx.Columns.Item("Lcl").Cells.Item(pVal.Row).Specific.value
                If lcl = "Y" Then
                    form.Items.Item("LCLAmnt").Enabled = True
                Else
                    form.Items.Item("LCLAmnt").Enabled = False
                End If
            End If
        Catch ex As Exception
            B1Connections.theAppl.MessageBox("VALIDATE_mtx_ds|OnAfterValidate|" & ex.Message.ToString)
        End Try
    End Sub

    <B1Listener(BoEventTypes.et_MATRIX_LINK_PRESSED, False)> _
    Public Overridable Sub OnAfterMatrixLinkPressed(ByVal pVal As ItemEvent)
        Dim ActionSuccess As Boolean = pVal.ActionSuccess
        Dim form As Form = B1Connections.theAppl.Forms.Item(pVal.FormUID)
        Dim item As Item = form.Items.Item("mtx_ds")
        Dim matrix As Matrix = CType(item.Specific, Matrix)
        'ADD YOUR ACTION CODE HERE ...
        Try
            If pVal.ColUID = "PtNo" Then
                B1Connections.theAppl.OpenForm(BoFormObjectEnum.fo_Quotation, BoObjectTypes.oQuotations, matrix.Columns.Item("PIEntry").Cells.Item(pVal.Row).Specific.Value)
            ElseIf pVal.ColUID = "ItemCod" Then
                B1Connections.theAppl.OpenForm(BoFormObjectEnum.fo_Items, BoObjectTypes.oItems, matrix.Columns.Item("ItemCod").Cells.Item(pVal.Row).Specific.Value)
            End If
        Catch ex As Exception
            B1Connections.theAppl.SetStatusBarMessage(ex.Message, BoMessageTime.bmt_Short, True)
        End Try
    End Sub

    <B1Listener(BoEventTypes.et_LOST_FOCUS, False)> _
    Public Overridable Sub OnAfterLostFocus(ByVal pVal As ItemEvent)
        Dim ActionSuccess As Boolean = pVal.ActionSuccess
        Dim form As Form = B1Connections.theAppl.Forms.Item(pVal.FormUID)
        Dim matrix As Matrix = CType(form.Items.Item("mtx_ds").Specific, Matrix)

        Try
            If pVal.ColUID = "Qty" Then
                Dim quantity As Double = CDbl(matrix.Columns.Item("Qty").Cells.Item(pVal.Row).Specific.value)
                Dim price As Double = CDbl(matrix.Columns.Item("Price").Cells.Item(pVal.Row).Specific.value)
                Dim pino As String = matrix.Columns.Item("PtNo").Cells.Item(pVal.Row).Specific.value
                Dim itemcode As String = matrix.Columns.Item("ItemCod").Cells.Item(pVal.Row).Specific.value
                Dim odbds As SAPbouiCOM.DBDataSource = CType(form.DataSources.DBDataSources.Item(0), SAPbouiCOM.DBDataSource)
                Dim docEntry As String = odbds.GetValue("DocEntry", odbds.Offset)

                'set balance qty
                Dim oldqty As Double
                If form.Mode = BoFormMode.fm_ADD_MODE Then
                    oldqty = 0
                Else
                    oldqty = CDbl(Control._retRstField("select ""U_IDU_Quantity"" from ""@DLS1"" where ""DocEntry""='" & docEntry & "' and ""U_IDU_ItemCode""='" & itemcode & "'"))
                End If

                Dim piqty As Double = CDbl(Control._retRstField("select t1.""Quantity"" from ""OQUT""  t0 inner join ""QUT1"" t1 on t0.""DocEntry""=t1.""DocEntry"" where t0.""DocNum""='" & pino & "' and t1.""ItemCode""='" & itemcode & "'"))

                Dim sql As String = "call _IDU_DLS_BALANCEDQTY('" & pino & "', '" & itemcode & "')"

                Dim balancevalue As Double
                If Control._retRstField(sql) = "" Then
                    balancevalue = 0
                Else
                    balancevalue = CDbl(Control._retRstField(sql))
                End If

                Dim balance As Double
                If form.Mode = BoFormMode.fm_ADD_MODE Then
                    balance = (piqty - balancevalue) - quantity
                Else
                    balance = oldqty + (piqty - balancevalue) - quantity
                End If

                matrix.SetCellWithoutValidation(pVal.Row, "BlncQty", balance)

                'set qty bag
                Dim baggingweight As Double = CDbl(Control._retRstField("select ""U_IDU_Bagging_Weight"" from ""OITM"" where ""ItemCode""='" & itemcode & "'"))
                matrix.SetCellWithoutValidation(pVal.Row, "QtyBgs", quantity * 1000 / baggingweight)

                'set totalamount
                matrix.SetCellWithoutValidation(pVal.Row, "TtlAmnt", quantity * price)
                Dim total As Double = 0

                DLVR_SCH__Sub.RefreshTotalAmount(form)
                DLVR_SCH__Sub.RefreshGrandTotal(form)

            ElseIf pVal.ColUID = "Lcl" Then
                Dim lcl As String = matrix.Columns.Item("Lcl").Cells.Item(pVal.Row).Specific.value
                If lcl = "Y" Then
                    form.Items.Item("LCLAmnt").Enabled = True
                Else
                    form.Items.Item("LCLAmnt").Enabled = False
                End If
            End If
        Catch ex As Exception

        End Try
    End Sub

End Class
